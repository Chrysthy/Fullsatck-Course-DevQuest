* Objetivo:
Aprender como implementar um sistema de roteamento eficiente em sua página. 

* Rotas:
As rotas são fundamentais para criar aplicações web complexas e interativas, permitindo a navegação entre diferentes páginas e componentes.

São caminhos específicos dentro do site, que levam até determinadas páginas.

* URL:
Nas URLs podemos encontrar as slugs, além das páginas mais comuns:
/contatos, /informacoes, etc.

* Slug:
É a parte de uma URL que pode ser legível tanto para humanos quanto para mecanismos de busca. É, normalmente, parte da URL de páginas em sistemas que fazem uso de URL amigável. 

O nome slug vem do inglês, significando "projétil", sendo este o codinome interno dado às notícias em redações de jornais para rápida referência às mesmas.

EX.: a-historia-do-gato-preto

* React Router:
Trabalha com o conceito de SPA: Single Page Application.

Dá a impressão que tem apenas uma página, pois "não existe atualização entre páginas".

Bom, existe mas o carregamento é dinâmico e imperceptível. 

* Export nomeado (com {})
import { PostsList } from '../components/posts'
export { Posts }

Sempre que mudar o nome na exportação, somos obrigados a trocar o nome da importação também.

* Criando arquivo de rotas
! Vai ser o arquivo de configuração de todas as rotas do site

routes.js 

Para usar as rotas, teremos que importar alguns métodos/componentes que vem do react-router-dom. Precisamos importar:

Nop terminal:

- npm i react-router-dom 
- Se já tiver no projeto, é só colocar no terminal npm install para instalar todos os pacotes que estão no projeto clonado/forkado

Precisamos import { BrowserRouter, Route, Routes } from "react-router-dom"

Estrutura dos componentes:

<BrowserRouter>

    <Routes>

        <Route exact path='/' element={<Posts />} />
        <Route exact path='/post/:id' element={<PostsDetails />} />

     </Routes>

</BrowserRouter>

? exact = exato, exatamente essa rota

? path = é o caminho, e a / essa é a primeira rota que vai cair, é a rota padrão que o site vai carregar.

?element = qual o elemento, a página que eu quero carregar.


! Na criação de um arquivo dentro de uma pasta, podemos também utilizar o index.js ao invés do nome que está a pasta

Ex.: criação da pasta Post e o arquivo Post.jsx

Ex.: criação da pasta Post e o arquivo index.jsx e quando for importar, não precisa necessariamente colocar o .jsx pois como é index, o navegador vai abrir esse arquivo sempre/primeiro por padrão.

Exemplo:

import { PostsDetails } from "../components/post"


? Para deixar um link clicável, temos o componente Link e o to dentro do link.

Exemplo:

import { Link } from 'react-router-dom'

<Link to={`/post/${post.id}`}>
                        
    <img src={post.image} alt="" />

    <h2>{post.title}</h2>

</Link>


? E podemos também colocar para voltar para a página principal

Exemplo:

import { Link } from 'react-router-dom'

<Link to='/'>Voltar para os posts</Link>